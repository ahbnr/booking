name: Booking CI

on:
  pull_request: {}
  push: { branches: [main] }
  workflow_dispatch: {}

jobs:
  build:
    name: Build and Test Booking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14
        backendPath:
          - backend
    steps:
      - name: Setup kernel to allow many file watchers for our frontend tests
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Install Yarn
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g yarn

      - name: Add yarn to PATH
        run: |
            YARN_PATH=$(npm root -g)/yarn/bin
            echo "Path to yarn: $YARN_PATH"
            echo "$YARN_PATH" >> $GITHUB_PATH

      - name: Confirm yarn version
        run: yarn --version

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: 'main'
          lfs: true

      # Cache dependencies etc. downloaded by yarn
      # (based on https://dev.to/mpocock1/how-to-cache-nodemodules-in-github-actions-with-yarn-24eh)
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      # Cache yarn cache dir
      - name: Cache yarn cache dir
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules folders
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Cache cypress
        uses: actions/cache@v2
        with:
          path: '~/.cache/Cypress'
          key: ${{ runner.os }}-modules-frontend-cypress-${{ hashFiles('frontend/yarn.lock') }}

      - name: Cache common build artifacts
        uses: actions/cache@v2
        with:
          path: 'common/dist'
          key: ${{ runner.os }}-modules-common-build-${{ hashFiles('common/yarn.lock') }}

      - name: Cache backend build artifacts
        uses: actions/cache@v2
        with:
          path: 'backend/dist'
          key: ${{ runner.os }}-modules-backend-build-${{ hashFiles('backend/yarn.lock') }}

      - name: Cache frontend build artifacts
        uses: actions/cache@v2
        with:
          path: 'frontend/build'
          key: ${{ runner.os }}-modules-frontend-build-${{ hashFiles('frontend/yarn.lock') }}

      # Install dependencies
      - name: Install Dependencies
        run: |
          yarn install

      # Common
      - name: Lint Common
        working-directory: common
        run: |
          yarn lint

      - name: Build Common
        working-directory: common
        run: |
          yarn build

      - name: Test Common
        working-directory: common
        run: |
          yarn test

      # Backend
      - name: Lint Backend
        working-directory: backend
        run: |
          yarn lint

      - name: Build Backend
        working-directory: backend
        run: |
          yarn build

      - name: Test Backend
        working-directory: backend
        run: |
          yarn test

      - name: Deploy Backend to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "booking-backend-api"
          heroku_email: ${{secrets.HEROKU_API_MAIL}}

      # Frontend
      - name: Lint Frontend
        working-directory: frontend
        run: |
          yarn lint

      - name: Build Frontend
        working-directory: frontend
        run: |
          yarn build

      - name: Test Frontend
        working-directory: frontend
        run: |
          yarn test

      - name: Deploy Frontend to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "booking-frontend-app"
          heroku_email: ${{secrets.HEROKU_API_MAIL}}
